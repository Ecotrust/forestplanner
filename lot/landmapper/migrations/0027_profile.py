# Generated by Django 3.2.14 on 2023-02-22 16:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

# Saving a user creates an associated profile automatically.
def populate_profiles(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Profile = apps.get_model('landmapper', 'Profile')
    for user in User.objects.all():
        user.save()
        try:
            user.profile
        except Exception as e:
            Profile.objects.get_or_create(user=user)

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('landmapper', '0026_propertyrecord'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_questions_status', models.CharField(blank=True, choices=[(None, 'User has not seen questions'), ('seen', 'User has seen the form'), ('done', 'User has filled out the questions.')], default=None, max_length=5, null=True)),
                ('followup_questions_status', models.CharField(blank=True, choices=[(None, 'User has not seen questions'), ('seen', 'User has seen the form'), ('done', 'User has filled out the questions.')], default=None, max_length=5, null=True)),
                ('type_selection', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Private forest owner'), ('1', 'Professional service provider (e.g., forester, conservationist)'), ('2', 'Student or educator'), ('3', 'Just curious'), ('4', 'Other [please specify]')], default=None, max_length=2, null=True, verbose_name='Which of the following roles best captures your primary use of this website?')),
                ('type_other', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Other use')),
                ('has_plan', models.BooleanField(default=False)),
                ('plan_date', models.DateField(blank=True, default=None, null=True)),
                ('q3_1_health', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Maintaining long-term forest health and productivity')),
                ('q3_2_habitat', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Protecting or improving wildlife habitat')),
                ('q3_3_beauty', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Maintaining natural beauty and aesthetics')),
                ('q3_4_next_gen', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Preserving the land for the next generation')),
                ('q3_5_risks', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Reducing fire or pest risks')),
                ('q3_6_climate_change', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Adapting the land for climate change')),
                ('q3_7_carbon', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Sequestering carbon')),
                ('q3_8_invasive_species', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Addressing invasive species')),
                ('q3_9_timber', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Harvesting and selling timber')),
                ('q3_10_profit', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Earning a profit from the land')),
                ('q3_11_cultural_uses', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Not a Priority'), ('1', 'Low Priority'), ('2', 'Medium Priority'), ('3', 'High Priority'), ('4', 'Essential')], default=None, max_length=2, null=True, verbose_name='Maintaining personal or cultural uses of the land (hunting, gathering, hiking, camping, fishing, etc.)')),
                ('q4a_1_land_management', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app helped me learn more about land I own or manage')),
                ('q4a_2_issue', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app helped me learn more about an issue')),
                ('q4a_3_coordinate', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app helped me coordinate with others')),
                ('q4a_4_decision', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app helped me make a decision')),
                ('q4a_5_activity', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app helped me implement or maintain a specific activity')),
                ('q4a_6_information', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app influenced me to pursue additional information or services')),
                ('q4a_7_plan', models.CharField(blank=True, choices=[(None, 'Prefer Not to Answer'), ('0', 'Strongly Disagree'), ('1', 'Disagree'), ('2', 'Neither Agree Nor Disagree'), ('3', 'Agree'), ('4', 'Strongly Agree')], default=None, max_length=2, null=True, verbose_name='The app helped me complete a written Stewardship Plan or Forest Management Plan')),
                ('feedback', models.TextField(blank=True, default=None, null=True, verbose_name='Is there anything else youâ€™d like us to know about your experience using the app?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(populate_profiles, reverse_code=migrations.RunPython.noop),
    ]
